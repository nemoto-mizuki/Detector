2022-08-31 23:06:53,395   INFO  **********************Start logging**********************
2022-08-31 23:06:53,395   INFO  CUDA_VISIBLE_DEVICES=0,1
2022-08-31 23:06:53,396   INFO  total_batch_size: 12
2022-08-31 23:06:53,396   INFO  cfg_file         /media/Elements/nemoto/OpenPCDet/tools/cfgs/waymo_models/centerpoint.yaml
2022-08-31 23:06:53,396   INFO  batch_size       6
2022-08-31 23:06:53,403   INFO  epochs           50
2022-08-31 23:06:53,404   INFO  workers          1
2022-08-31 23:06:53,404   INFO  extra_tag        default
2022-08-31 23:06:53,404   INFO  ckpt             None
2022-08-31 23:06:53,404   INFO  pretrained_model /media/Elements/nemoto/OpenPCDet/output_v0/media/Elements/nemoto/OpenPCDet/tools/cfgs/waymo_models/centerpoint/default/ckpt/checkpoint_epoch_10.pth
2022-08-31 23:06:53,405   INFO  launcher         pytorch
2022-08-31 23:06:53,405   INFO  tcp_port         18888
2022-08-31 23:06:53,405   INFO  sync_bn          False
2022-08-31 23:06:53,405   INFO  fix_random_seed  False
2022-08-31 23:06:53,405   INFO  ckpt_save_interval 1
2022-08-31 23:06:53,405   INFO  local_rank       0
2022-08-31 23:06:53,405   INFO  max_ckpt_save_num 100
2022-08-31 23:06:53,405   INFO  merge_all_iters_to_one_epoch False
2022-08-31 23:06:53,406   INFO  set_cfgs         None
2022-08-31 23:06:53,406   INFO  max_waiting_mins 0
2022-08-31 23:06:53,406   INFO  start_epoch      0
2022-08-31 23:06:53,406   INFO  save_to_file     False
2022-08-31 23:06:53,406   INFO  cfg.ROOT_DIR: /media/Elements/nemoto/OpenPCDet
2022-08-31 23:06:53,406   INFO  cfg.LOCAL_RANK: 0
2022-08-31 23:06:53,407   INFO  cfg.CLASS_NAMES: ['Vehicle', 'Pedestrian', 'Cyclist']
2022-08-31 23:06:53,407   INFO  
cfg.DATA_CONFIG = edict()
2022-08-31 23:06:53,407   INFO  cfg.DATA_CONFIG.DATASET: WaymoDataset
2022-08-31 23:06:53,407   INFO  cfg.DATA_CONFIG.DATA_PATH: /media/Elements/nemoto/OpenPCDet/data/waymo
2022-08-31 23:06:53,407   INFO  cfg.DATA_CONFIG.PROCESSED_DATA_TAG: waymo_processed_data_v0_5_0
2022-08-31 23:06:53,407   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [-75.2, -75.2, -2, 75.2, 75.2, 4]
2022-08-31 23:06:53,407   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2022-08-31 23:06:53,408   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2022-08-31 23:06:53,408   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2022-08-31 23:06:53,408   INFO  
cfg.DATA_CONFIG.SAMPLED_INTERVAL = edict()
2022-08-31 23:06:53,408   INFO  cfg.DATA_CONFIG.SAMPLED_INTERVAL.train: 5
2022-08-31 23:06:53,408   INFO  cfg.DATA_CONFIG.SAMPLED_INTERVAL.test: 1
2022-08-31 23:06:53,408   INFO  cfg.DATA_CONFIG.FILTER_EMPTY_BOXES_FOR_TRAIN: True
2022-08-31 23:06:53,408   INFO  cfg.DATA_CONFIG.DISABLE_NLZ_FLAG_ON_POINTS: True
2022-08-31 23:06:53,409   INFO  cfg.DATA_CONFIG.USE_SHARED_MEMORY: False
2022-08-31 23:06:53,409   INFO  cfg.DATA_CONFIG.SHARED_MEMORY_FILE_LIMIT: 35000
2022-08-31 23:06:53,409   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2022-08-31 23:06:53,409   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2022-08-31 23:06:53,409   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': False, 'DB_INFO_PATH': ['waymo_processed_data_v0_5_0_waymo_dbinfos_train_sampled_1.pkl'], 'USE_SHARED_MEMORY': False, 'DB_DATA_PATH': ['waymo_processed_data_v0_5_0_gt_database_train_sampled_1_global.npy'], 'PREPARE': {'filter_by_min_points': ['Vehicle:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Vehicle:15', 'Pedestrian:10', 'Cyclist:10'], 'NUM_POINT_FEATURES': 5, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x', 'y']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2022-08-31 23:06:53,409   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2022-08-31 23:06:53,410   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2022-08-31 23:06:53,410   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity', 'elongation']
2022-08-31 23:06:53,410   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity', 'elongation']
2022-08-31 23:06:53,410   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': True}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.1, 0.1, 0.15], 'MAX_POINTS_PER_VOXEL': 5, 'MAX_NUMBER_OF_VOXELS': {'train': 150000, 'test': 150000}}]
2022-08-31 23:06:53,410   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/waymo_dataset.yaml
2022-08-31 23:06:53,410   INFO  
cfg.MODEL = edict()
2022-08-31 23:06:53,411   INFO  cfg.MODEL.NAME: CenterPoint
2022-08-31 23:06:53,411   INFO  
cfg.MODEL.VFE = edict()
2022-08-31 23:06:53,411   INFO  cfg.MODEL.VFE.NAME: MeanVFE
2022-08-31 23:06:53,411   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2022-08-31 23:06:53,411   INFO  cfg.MODEL.BACKBONE_3D.NAME: VoxelResBackBone8x
2022-08-31 23:06:53,411   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2022-08-31 23:06:53,411   INFO  cfg.MODEL.MAP_TO_BEV.NAME: HeightCompression
2022-08-31 23:06:53,411   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 256
2022-08-31 23:06:53,412   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2022-08-31 23:06:53,412   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2022-08-31 23:06:53,412   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [5, 5]
2022-08-31 23:06:53,412   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [1, 2]
2022-08-31 23:06:53,412   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [128, 256]
2022-08-31 23:06:53,412   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2]
2022-08-31 23:06:53,413   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [256, 256]
2022-08-31 23:06:53,413   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2022-08-31 23:06:53,413   INFO  cfg.MODEL.DENSE_HEAD.NAME: CenterHead
2022-08-31 23:06:53,413   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2022-08-31 23:06:53,413   INFO  cfg.MODEL.DENSE_HEAD.CLASS_NAMES_EACH_HEAD: [['Vehicle', 'Pedestrian', 'Cyclist']]
2022-08-31 23:06:53,413   INFO  cfg.MODEL.DENSE_HEAD.SHARED_CONV_CHANNEL: 64
2022-08-31 23:06:53,413   INFO  cfg.MODEL.DENSE_HEAD.USE_BIAS_BEFORE_NORM: True
2022-08-31 23:06:53,413   INFO  cfg.MODEL.DENSE_HEAD.NUM_HM_CONV: 2
2022-08-31 23:06:53,413   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG = edict()
2022-08-31 23:06:53,414   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_ORDER: ['center', 'center_z', 'dim', 'rot']
2022-08-31 23:06:53,414   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT = edict()
2022-08-31 23:06:53,414   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center = edict()
2022-08-31 23:06:53,414   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center.out_channels: 2
2022-08-31 23:06:53,414   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center.num_conv: 2
2022-08-31 23:06:53,414   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z = edict()
2022-08-31 23:06:53,414   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z.out_channels: 1
2022-08-31 23:06:53,415   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z.num_conv: 2
2022-08-31 23:06:53,415   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim = edict()
2022-08-31 23:06:53,415   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim.out_channels: 3
2022-08-31 23:06:53,415   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim.num_conv: 2
2022-08-31 23:06:53,415   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot = edict()
2022-08-31 23:06:53,415   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot.out_channels: 2
2022-08-31 23:06:53,415   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot.num_conv: 2
2022-08-31 23:06:53,416   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2022-08-31 23:06:53,416   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.FEATURE_MAP_STRIDE: 8
2022-08-31 23:06:53,416   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NUM_MAX_OBJS: 500
2022-08-31 23:06:53,416   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.GAUSSIAN_OVERLAP: 0.1
2022-08-31 23:06:53,416   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MIN_RADIUS: 2
2022-08-31 23:06:53,416   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2022-08-31 23:06:53,416   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2022-08-31 23:06:53,417   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2022-08-31 23:06:53,417   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2022-08-31 23:06:53,417   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2022-08-31 23:06:53,417   INFO  
cfg.MODEL.DENSE_HEAD.POST_PROCESSING = edict()
2022-08-31 23:06:53,417   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.SCORE_THRESH: 0.1
2022-08-31 23:06:53,417   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.POST_CENTER_LIMIT_RANGE: [-75.2, -75.2, -2, 75.2, 75.2, 4]
2022-08-31 23:06:53,417   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.MAX_OBJ_PER_SAMPLE: 500
2022-08-31 23:06:53,418   INFO  
cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG = edict()
2022-08-31 23:06:53,418   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2022-08-31 23:06:53,418   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.7
2022-08-31 23:06:53,418   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2022-08-31 23:06:53,418   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2022-08-31 23:06:53,418   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2022-08-31 23:06:53,418   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2022-08-31 23:06:53,418   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: waymo
2022-08-31 23:06:53,419   INFO  
cfg.OPTIMIZATION = edict()
2022-08-31 23:06:53,419   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2022-08-31 23:06:53,419   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 30
2022-08-31 23:06:53,419   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2022-08-31 23:06:53,419   INFO  cfg.OPTIMIZATION.LR: 0.003
2022-08-31 23:06:53,419   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2022-08-31 23:06:53,419   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2022-08-31 23:06:53,420   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2022-08-31 23:06:53,420   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2022-08-31 23:06:53,420   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2022-08-31 23:06:53,420   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2022-08-31 23:06:53,420   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2022-08-31 23:06:53,420   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2022-08-31 23:06:53,420   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2022-08-31 23:06:53,421   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2022-08-31 23:06:53,421   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2022-08-31 23:06:53,421   INFO  cfg.TAG: centerpoint
2022-08-31 23:06:53,421   INFO  cfg.EXP_GROUP_PATH: media/Elements/nemoto/OpenPCDet/tools/cfgs/waymo_models
2022-08-31 23:07:13,543   INFO  Database filter by min points Vehicle: 1194368 => 1019923
2022-08-31 23:07:13,698   INFO  Database filter by min points Pedestrian: 1114091 => 943716
2022-08-31 23:07:13,718   INFO  Database filter by min points Cyclist: 53344 => 47529
2022-08-31 23:07:13,953   INFO  Database filter by difficulty Vehicle: 1019923 => 1019923
2022-08-31 23:07:14,188   INFO  Database filter by difficulty Pedestrian: 943716 => 943716
2022-08-31 23:07:14,202   INFO  Database filter by difficulty Cyclist: 47529 => 47529
2022-08-31 23:07:14,561   INFO  Loading Waymo dataset
2022-08-31 23:07:38,942   INFO  Total skipped info 0
2022-08-31 23:07:38,942   INFO  Total samples for Waymo dataset: 158081
2022-08-31 23:07:38,950   INFO  Total sampled samples for Waymo dataset: 31617
2022-08-31 23:07:42,717   INFO  ==> Loading parameters from checkpoint /media/Elements/nemoto/OpenPCDet/output_v0/media/Elements/nemoto/OpenPCDet/tools/cfgs/waymo_models/centerpoint/default/ckpt/checkpoint_epoch_10.pth to CPU
2022-08-31 23:07:48,386   INFO  ==> Checkpoint trained from version: pcdet+0.5.1+1f5b787
2022-08-31 23:07:48,403   INFO  ==> Done (loaded 279/279)
2022-08-31 23:07:48,474   INFO  DistributedDataParallel(
  (module): CenterPoint(
    (vfe): MeanVFE()
    (backbone_3d): VoxelResBackBone8x(
      (conv_input): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (conv1): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d()
          (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU()
          (conv2): SubMConv3d()
          (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d()
          (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU()
          (conv2): SubMConv3d()
          (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
      (conv2): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d()
          (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU()
          (conv2): SubMConv3d()
          (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
        (2): SparseBasicBlock(
          (conv1): SubMConv3d()
          (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU()
          (conv2): SubMConv3d()
          (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
      (conv3): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d()
          (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU()
          (conv2): SubMConv3d()
          (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
        (2): SparseBasicBlock(
          (conv1): SubMConv3d()
          (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU()
          (conv2): SubMConv3d()
          (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
      (conv4): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d()
          (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU()
          (conv2): SubMConv3d()
          (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
        (2): SparseBasicBlock(
          (conv1): SubMConv3d()
          (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU()
          (conv2): SubMConv3d()
          (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
      (conv_out): SparseSequential(
        (0): SparseConv3d()
        (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (map_to_bev_module): HeightCompression()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): CenterHead(
      (shared_conv): Sequential(
        (0): Conv2d(512, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (heads_list): ModuleList(
        (0): SeparateHead(
          (center): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (center_z): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (hm): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (hm_loss_func): FocalLossCenterNet()
      (reg_loss_func): RegLossCenterNet()
    )
    (point_head): None
    (roi_head): None
  )
)
2022-08-31 23:07:48,477   INFO  **********************Start training media/Elements/nemoto/OpenPCDet/tools/cfgs/waymo_models/centerpoint(default)**********************
2022-09-05 20:03:46,369   INFO  **********************End training media/Elements/nemoto/OpenPCDet/tools/cfgs/waymo_models/centerpoint(default)**********************



2022-09-05 20:03:46,392   INFO  **********************Start evaluation media/Elements/nemoto/OpenPCDet/tools/cfgs/waymo_models/centerpoint(default)**********************
2022-09-05 20:03:46,422   INFO  Loading Waymo dataset
2022-09-05 20:03:52,755   INFO  Total skipped info 0
2022-09-05 20:03:52,763   INFO  Total samples for Waymo dataset: 39987
2022-09-05 20:03:52,781   INFO  ==> Loading parameters from checkpoint /media/Elements/nemoto/OpenPCDet/output/media/Elements/nemoto/OpenPCDet/tools/cfgs/waymo_models/centerpoint/default/ckpt/checkpoint_epoch_50.pth to CPU
2022-09-05 20:03:52,835   INFO  ==> Checkpoint trained from version: pcdet+0.5.1+1f5b787
2022-09-05 20:03:52,853   INFO  ==> Done (loaded 279/279)
2022-09-05 20:03:52,857   INFO  *************** EPOCH 50 EVALUATION *****************
2022-09-05 20:56:05,034   INFO  *************** Performance of EPOCH 50 *****************
2022-09-05 20:56:05,044   INFO  Generate label finished(sec_per_example: 0.0783 second).
2022-09-05 20:56:05,044   INFO  recall_roi_0.3: 0.000000
2022-09-05 20:56:05,044   INFO  recall_rcnn_0.3: 0.867263
2022-09-05 20:56:05,045   INFO  recall_roi_0.5: 0.000000
2022-09-05 20:56:05,045   INFO  recall_rcnn_0.5: 0.802556
2022-09-05 20:56:05,045   INFO  recall_roi_0.7: 0.000000
2022-09-05 20:56:05,045   INFO  recall_rcnn_0.7: 0.535101
2022-09-05 20:56:05,062   INFO  Average predicted number of objects(39987 samples): 200.574
